# This workflow uploads a file in the calling repository to a specified AWS S3
# bucket.
#
# PREREQUISITE #1
# GitHub's OIDC provider is configured in AWS as described in https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services.
#
# PREREQUISITE #2
# The calling workflow specifies the appropriate permissions needed to create
# the JSON Web Token (JWT) used to assume the specified AWS IAM role as
# described in https://github.com/aws-actions/configure-aws-credentials#oidc.

on:
  workflow_call:
    inputs:
      artifact:
        description: Name of artifact to upload to S3.
        required: true
        type: string
      s3-bucket:
        description: Name of S3 bucket to deploy `artifact` to.
        required: true
        type: string
      s3-key:
        description: S3 key to give `artifact` when uploaded to `s3-bucket`.
        required: true
        type: string
      github-role-arn:
        description: ARN of AWS IAM role used to grant GitHub access to AWS resources.
        required: true
        type: string
      aws-region:
        description: AWS region in which the S3 bucket is deployed.
        required: true
        type: string

name: upload-s3-object

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout calling repo
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact }}

      - name: Examine directory structure
        run: pwd && ls -R

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.github-role-arn }}
          aws-region: ${{ inputs.aws-region }}

      - name: Upload ${{ inputs.artifact }} to s3://${{ inputs.s3-bucket }}/${{ inputs.s3-key }}
        run: |
          pwd
          aws s3api put-object \
            --bucket ${{ inputs.s3-bucket }} \
            --key ${{ inputs.s3-key }} \
            --body ${{ inputs.artifact }} \
            --checksum-algorithm sha256 \
            --checksum-sha256 $(openssl dgst -binary -sha256 ${{ inputs.artifact }} | openssl base64)
